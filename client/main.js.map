{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/profile/profile-page/profile-page.component.ts","./src/app/components/profile/profile-page/profile-page.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/users/user/user.component.ts","./src/app/components/users/user/user.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/constants/regEx.constants.ts","./src/constants/url.constants.ts","./src/environments/environment.ts","./src/main.ts","./src/services/auth.service.ts","./src/services/guards/user.guard.ts","./src/services/interceptors/auth.interceptor.ts","./src/services/user.service.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from \"./components/home/home.component\";\r\nimport {LoginComponent} from \"./components/login/login.component\";\r\nimport {RegisterComponent} from \"./components/register/register.component\";\r\nimport {UserGuard} from \"../services/guards/user.guard\";\r\nimport {ProfileComponent} from \"./components/profile/profile.component\";\r\nimport {ProfilePageComponent} from \"./components/profile/profile-page/profile-page.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent, canActivate: [UserGuard]},\r\n\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [],\r\n    children: [\r\n      {path: 'info', component: ProfilePageComponent},\r\n      {\r\n        path: 'cabinet',\r\n        loadChildren: () => import('./modules/doctor-cabinet/doctor-cabinet.module').then(m => m.DoctorCabinetModule),\r\n        canActivate:[]\r\n      },\r\n    ]\r\n  },\r\n  {path: 'register', component: RegisterComponent, canActivate: [UserGuard]},\r\n  {path: 'patient', component: HomeComponent},\r\n  {path: 'admin', component: HomeComponent},\r\n  {path: '**', redirectTo: 'home', pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IUserModelInfo} from \"../models/IUser\";\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass'],\r\n  host:{}\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'health_care_frontend';\r\n\r\n  private roles: string[] = [];\r\n  isLoggedIn: boolean = false;\r\n  showDoctorsCabinet: boolean = false;\r\n  username?: string;\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.authService.getAccessToken()) {\r\n      this.roles = []\r\n      this.authService.UserIsLogged.next(true)\r\n      this.showDoctorsCabinet = this.roles.includes('doctor')\r\n    } else {\r\n      this.authService.UserIsLogged.next(false)\r\n    }\r\n    this.authService.UserIsLogged.subscribe({\r\n      next: (value) => {\r\n        this.isLoggedIn = value\r\n        if (value) {\r\n          let user: IUserModelInfo | void = this.authService.getUser();\r\n          if (user) {\r\n            for (let obj of user.user_role) {\r\n              this.roles.unshift(obj.role)\r\n            }\r\n            this.showDoctorsCabinet = this.roles.includes('doctor')\r\n            if (\"profile\" in user) {\r\n              this.username = user.profile.first_name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    this.authService.UserIsLogged.next(false)\r\n    this.isLoggedIn = false\r\n    this.authService.signOut()\r\n    window.location.reload()\r\n  }\r\n\r\n}\r\n","<div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark d-flex justify-content-between\">\r\n    <div class=\"d-flex\">\r\n      <h3 class=\"align-self-center\" style=\"color: whitesmoke\">DocHealth</h3>\r\n      <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n        <li class=\"nav-item\">\r\n          <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div>\r\n      <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\r\n        <li class=\"nav-item\">\r\n          <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n        </li>\r\n      </ul>\r\n      <div class=\"\">\r\n        <ul class=\"navbar-nav ml-auto d-flex gap-2\" *ngIf=\"isLoggedIn\">\r\n          <li class=\"nav-item \">\r\n            <a class=\"nav-link\" [routerLink]=\"['profile','info']\">My profile</a>\r\n          </li>\r\n          <li class=\"nav-item \">\r\n            <a href class=\"nav-link\" (click)=\"logOut()\">Log out</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {RegisterComponent} from './components/register/register.component';\r\nimport {ProfileComponent} from './components/profile/profile.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {AuthServiceProvider} from \"../services/interceptors/auth.interceptor\";\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {UsersComponent} from './components/users/users.component';\r\nimport {UserComponent} from './components/users/user/user.component';\r\nimport {ProfilePageComponent} from './components/profile/profile-page/profile-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    HomeComponent,\r\n    UsersComponent,\r\n    UserComponent,\r\n    ProfilePageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: AuthServiceProvider,\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.sass']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(\r\n    private UserService: UserService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div *ngIf=\"1 else welcome_screen\">\r\n  </div>\r\n</div>\r\n\r\n<ng-template #welcome_screen>\r\n  <div>\r\n    <p>Hello</p>\r\n  </div>\r\n</ng-template>\r\n\r\n<app-users></app-users>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  formLogin: FormGroup = new FormGroup({\r\n    email: new FormControl('doc_1@gmail.com'),\r\n    password: new FormControl('111111')\r\n  })\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errMsg = ''\r\n  user: IUserModelInfo;\r\n  roles: string[] = [];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.UserIsLogged.subscribe({next: value => this.isLoggedIn = value})\r\n    if (this.authService.getAccessToken()) {\r\n      const user = this.authService.getUser()\r\n      if (user) {\r\n        this.user = user\r\n      }\r\n      this.authService.UserIsLogged.next(true)\r\n    } else {\r\n\r\n      this.authService.UserIsLogged.next(false)\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const {email, password} = this.formLogin.getRawValue()\r\n    this.authService.login(email, password).subscribe(\r\n      {\r\n        next: (value) => {\r\n          this.authService.SaveTokens(value)\r\n          this.isLoginFailed = false\r\n          this.isLoggedIn = true\r\n\r\n          this.userService.getMeUser().subscribe({\r\n            next: (value) => {\r\n              let user = value.results[0]\r\n              this.authService.saveUser(user)\r\n              this.user = user\r\n              this.authService.UserIsLogged.next(true)\r\n              this.router.navigate(['/home'])\r\n            },\r\n            error: (err) => {\r\n              this.authService.UserIsLogged.next(false)\r\n              this.errMsg = err.error.message;\r\n              this.isLoginFailed = true\r\n\r\n            }\r\n          })\r\n        },\r\n        error: (err) => {\r\n          this.errMsg = err.error.message;\r\n          this.isLoginFailed = true\r\n        },\r\n      }\r\n    )\r\n\r\n  }\r\n}\r\n","<div class=\"col-md-12\" style=\"margin-top: 30vh\">\n  <div class=\"card-container\">\n    <form\n      class=\"px-2 py-2 d-flex flex-column align-items-center\"\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"formLogin.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n      [formGroup]=\"formLogin\"\n    >\n      <div class=\"row mb-2\">\n        <div class=\"col form-group\">\n          <label for=\"email\">Email</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            formControlName=\"email\"\n            required\n          />\n        </div>\n        <!--        <div-->\n        <!--          class=\"alert alert-danger\"-->\n        <!--          role=\"alert\"-->\n        <!--          *ngIf=\"username.errors && f.submitted\"-->\n        <!--        >-->\n        <!--          Username is required!-->\n        <!--        </div>-->\n      </div>\n      <div class=\"row mb-2 \">\n        <div class=\"col form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            formControlName=\"password\"\n            required\n            minlength=\"4\"\n          />\n        </div>\n        <!--        <div-->\n        <!--          class=\"alert alert-danger\"-->\n        <!--          role=\"alert\"-->\n        <!--          *ngIf=\"password.errors && f.submitted\"-->\n        <!--        >-->\n        <!--          <div *ngIf=\"password.errors.required\">Password is required</div>-->\n        <!--          <div *ngIf=\"password.errors.minlength\">-->\n        <!--            Password must be at least 6 characters-->\n        <!--          </div>-->\n        <!--        </div>-->\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <!--      <div class=\"form-group\">-->\n      <!--        <div-->\n      <!--          class=\"alert alert-danger\"-->\n      <!--          role=\"alert\"-->\n      <!--          *ngIf=\"f.submitted && isLoginFailed\"-->\n      <!--        >-->\n      <!--          Login failed: {{ errMsg }}-->\n      <!--        </div>-->\n      <!--      </div>-->\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn && user\">\n      <p>Logged in as {{user.profile.first_name}} {{user.profile.last_name}}</p>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IUserModelInfo} from \"../../../../models/IUser\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {Validator} from \"@angular/forms\";\nimport {regExList} from \"../../../../constants/regEx.constants\";\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.sass']\n})\nexport class ProfilePageComponent implements OnInit {\n\n  @Input()\n  currentUser: IUserModelInfo;\n  userForm: FormGroup;\n\n  _editAbout: boolean = false\n  _disableOnSubmit: boolean = true\n  _placeholderInfo: string = 'Minimum characters input'\n  _minChars: number = 10\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    const user = this.authService.getUser()\n    if (user) {\n      this.currentUser = user\n    } else {\n      this.getUser()\n    }\n    this._createUserForm()\n  }\n\n  getUser(): void {\n    this.userService.getMeUser().subscribe({\n      next: (value) => {\n        const user: IUserModelInfo = value.results[0]\n        this.currentUser = user\n        this.authService.saveUser(user)\n      },\n      error: (value) => {\n        console.log('Profile model err')\n      }\n    })\n  }\n\n  _createUserForm(): void {\n    this.userForm = new FormGroup({\n      age: new FormControl(``, [Validators.min(1), Validators.max(130)]),\n      phone_number: new FormControl(``, [Validators.pattern(regExList.ukrainian_phone_num)]),\n      first_name: new FormControl(``, [\n        Validators.maxLength(25), Validators.minLength(2)\n      ]),\n      second_name: new FormControl(``, [\n        Validators.maxLength(25), Validators.minLength(2)\n      ]),\n      about_user: new FormControl(``, [Validators.minLength(10), Validators.maxLength(5000)]),\n    })\n  }\n\n  onSubmit() {\n\n    let newInfo = this.userForm.value\n\n    Object.keys(newInfo).forEach(key => {\n      if (newInfo[key] === '' || newInfo[key] === null) {\n        delete newInfo[key];\n      }\n    })\n    if (Object.keys(newInfo).length !== 0) {\n      this.userService.updateUserProfileByID(newInfo).subscribe({\n        next: (profile) => {\n          this.currentUser.profile = profile\n          this.authService.updateUser(profile)\n          this.userForm.reset(this.userForm.value)\n          this._editAbout = false\n        },\n        error: (err) => {\n          console.warn(err)\n        }\n      })\n    }\n  }\n\n  charactersonChange(e: string) {\n    console.log(e.length)\n    if (e.length === 0 ) {\n      this._minChars = 10;\n    }\n    if (this._minChars > 0) {\n      this._minChars = 10 - e.length\n    }\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h4>Your Profile</h4>\n        <hr>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group row mb-2\">\n            <label for=\"username\" class=\"col-4 col-form-label\">{{currentUser.email}}</label>\n            <div class=\"col-8\">\n              <input\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Mail\"\n                class=\"form-control here\"\n                required=\"required\"\n                type=\"text\"\n                disabled\n              >\n            </div>\n          </div>\n          <div class=\"form-group row mb-2\">\n            <label for=\"name\" class=\"col-4 col-form-label\">{{currentUser.profile.first_name}}</label>\n            <div class=\"col-8\">\n              <input\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"First Name\"\n                class=\"form-control here\"\n                formControlName=\"first_name\"\n                type=\"text\">\n            </div>\n          </div>\n          <div class=\"form-group row mb-2\">\n            <label for=\"lastname\" class=\"col-4 col-form-label\">{{currentUser.profile.second_name}}</label>\n            <div class=\"col-8\">\n              <input\n                id=\"lastname\"\n                name=\"lastname\"\n                placeholder=\"Last Name\"\n                class=\"form-control here\"\n                type=\"text\"\n                formControlName=\"second_name\"\n              >\n            </div>\n          </div>\n          <!--                              <div class=\"form-group row\">-->\n          <!--                                <label for=\"select\" class=\"col-4 col-form-label\">Display Name public as</label>-->\n          <!--                                <div class=\"col-8\">-->\n          <!--                                  <select id=\"select\" name=\"select\" class=\"custom-select\">-->\n          <!--                                    <option value=\"admin\">Admin</option>-->\n          <!--                                  </select>-->\n          <!--                                </div>-->\n          <!--                              </div>-->\n          <div class=\"form-group row mb-2\">\n            <label for=\"age\" class=\"col-4 col-form-label\">Age: </label>\n            <div class=\"col-8\">\n              <input\n                id=\"age\"\n                name=\"age\"\n                placeholder=\"Age\"\n                class=\"form-control here\"\n                formControlName=\"age\"\n                type=\"text\">\n            </div>\n          </div>\n          <div class=\"form-group row mb-2\">\n            <label for=\"phone_number\" class=\"col-4 col-form-label\">Phone\n              number: {{currentUser.profile.phone_number}}</label>\n            <div class=\"col-8\">\n              <input\n                id=\"phone_number\"\n                name=\"name\"\n                placeholder=\"Phone number\"\n                class=\"form-control here\"\n                formControlName=\"phone_number\"\n                type=\"text\">\n            </div>\n          </div>\n\n          <div class=\"form-group row mb-2\">\n\n            <div class=\"col-4 mb-2\">\n              <label for=\"about_user\" class=\"me-2 col-form-label\">About</label>\n              <button type=\"button\" (click)=\"_editAbout=!_editAbout\" class=\"btn btn-secondary\"> EDIT</button>\n            </div>\n            <div class=\"col-8\">\n              <div class=\"row\" *ngIf=\"!_editAbout\">\n                <p class=\"form-control col w-100\" style=\"height: 200px; background-color: #f4f4f4\"\n                   *ngIf=\"currentUser.profile.about_user\">{{currentUser.profile.about_user}}\n                </p>\n              </div>\n\n              <div class=\"row position-relative\" *ngIf=\"_editAbout\">\n                  <textarea\n                    id=\"about_user\"\n                    name=\"about_user\"\n                    class=\"form-control col w-100 text-field\"\n                    style=\"height: 200px\"\n                    formControlName=\"about_user\"\n\n                    [placeholder]=\"_placeholderInfo\"\n                    (ngModelChange)=\"charactersonChange($event)\"\n                  >\n                  </textarea>\n                  <span *ngIf=\"_minChars>0\" class=\"text-field-placeholder\">Minimum characters {{_minChars}}</span>\n              </div>\n            </div>\n          </div>\n\n          <!--    This action needs to be separated to another form      -->\n          <!--          <div class=\"form-group row mb-2\">-->\n          <!--            <label for=\"newpass\" class=\"col-4 col-form-label\">New Password</label>-->\n          <!--            <div class=\"col-8\">-->\n          <!--              <input-->\n          <!--                id=\"newpass\"-->\n          <!--                name=\"newpass\"-->\n          <!--                placeholder=\"New Password\"-->\n          <!--                class=\"form-control here\"-->\n          <!--                formControlName=\"password\"-->\n          <!--                type=\"text\"-->\n          <!--              >-->\n          <!--            </div>-->\n          <!--          </div>-->\n          <div class=\"form-group row\">\n            <div class=\"col-12\">\n              <button name=\"submit\" type=\"submit\" [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Update My\n                Profile\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.sass']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  pageProfile: boolean = true\r\n  _userIsDoc: boolean = false\r\n  currentUser: IUserModelInfo;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private AC: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    const user = this.authService.getUser()\r\n\r\n    if (user) {\r\n      this.currentUser = user\r\n      user.user_role.some(value => {\r\n        this._userIsDoc = (value.role === 'doctor')\r\n      })\r\n    } else {\r\n      this.getUser()\r\n    }\r\n  }\r\n\r\n\r\n  getUser(): void {\r\n    this.userService.getMeUser().subscribe({\r\n      next: (value) => {\r\n        const user: IUserModelInfo = value.results[0]\r\n        this.currentUser = user\r\n        this.authService.saveUser(user)\r\n      },\r\n      error: (value) => {\r\n        console.log('Profile model error')\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"container\" style=\"margin-top: 120px\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3 \">\r\n      <div class=\"list-group mb-2\">\r\n        <a [routerLink]=\"['info']\" class=\"list-group-item list-group-item-action active\">Info</a>\r\n      </div>\r\n      <div *ngIf=\"_userIsDoc\" class=\"list-group \">\r\n\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">User Management</a>-->\r\n<!--        <a [routerLink]=\"['cabinet']\" class=\"list-group-item list-group-item-action\">Cabinet</a>-->\r\n        <a [routerLink]=\"['cabinet','patients']\" class=\"list-group-item list-group-item-action\">Patients</a>\r\n        <a [routerLink]=\"['cabinet','appointments']\" class=\"list-group-item list-group-item-action\">Appointments</a>\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Dealer</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Media</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Post</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Category</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">New</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Comments</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Appearance</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Reports</a>-->\r\n        <!--              <a href=\"#\" class=\"list-group-item list-group-item-action\">Settings</a>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-9\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {IUserModelSignUp} from \"../../../models/IUser\";\r\nimport * as events from \"events\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.sass']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  is_doctor_checker = false\r\n  is_patient_checker = false\r\n  isSuccessful: boolean = true\r\n  isSignUpFailed: boolean = false\r\n  errMsg: string = '';\r\n\r\n  registerForm: FormGroup = new FormGroup(\r\n    {\r\n      email: new FormControl('118@gmail.com'),\r\n      password: new FormControl('111111'),\r\n      profile: new FormGroup(\r\n        {\r\n          first_name: new FormControl('Serhiy'),\r\n          second_name: new FormControl('Terletskiy'),\r\n          last_name: new FormControl('andriy'),\r\n          age: new FormControl('18'),\r\n        }\r\n      ),\r\n      is_doctor: new FormControl(false),\r\n      is_patient: new FormControl(false)\r\n    }\r\n  );\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    let user = this.registerForm.getRawValue()\r\n    this.authService.register(user).subscribe({\r\n        next: (value) => {\r\n          this.isSuccessful = true\r\n          this.isSignUpFailed = false\r\n          this.router.navigate(['login'])\r\n        },\r\n        error: (err) => {\r\n          if (err.error.email) {\r\n            this.errMsg = 'The email is already taken'\r\n          } else {\r\n            this.errMsg = JSON.stringify(err)\r\n          }\r\n          this.isSignUpFailed = true\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  checkDoctor() {\r\n    this.is_doctor_checker = !this.is_doctor_checker\r\n  }\r\n\r\n  checkPatient() {\r\n    this.is_patient_checker = !this.is_patient_checker\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"border-2 d-flex align-items-center flex-column\" style=\"margin-top: 120px\">\r\n    <form class=\"w-75\" [formGroup]=\"registerForm\" *ngIf=\"isSuccessful\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"text\" id=\"email\" class=\"form-control\" required email formControlName=\"email\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"text\" id=\"password\" class=\"form-control\" required formControlName=\"password\">\r\n        <div formGroupName=\"profile\">\r\n          <label for=\"age\">Age</label>\r\n          <input type=\"text\" id=\"age\" class=\"form-control\" required formControlName=\"age\">\r\n          <label for=\"first_name\">First name</label>\r\n          <input type=\"text\" id=\"first_name\" class=\"form-control\" required formControlName=\"first_name\">\r\n          <label for=\"second_name\">Second name</label>\r\n          <input type=\"text\" id=\"second_name\" class=\"form-control\" required formControlName=\"second_name\">\r\n          <label for=\"last_name\">Last name</label>\r\n          <input type=\"text\" id=\"last_name\" class=\"form-control\" required formControlName=\"last_name\">\r\n        </div>\r\n        <div>\r\n          <div class=\"mx-2 d-flex align-items-center\">\r\n            <label class=\"me-2 my-1\" for=\"is_patient\">I am a patient</label>\r\n            <input type=\"checkbox\" id=\"is_patient\" class=\"checkbox my-1\" (click)=\"checkPatient()\"\r\n                   [checked]=\"is_patient_checker\" formControlName=\"is_patient\">\r\n          </div>\r\n          <div class=\"mx-2 d-flex align-items-center\">\r\n            <label class=\"me-2 my-1\" for=\"is_doctor\">I am a doctor</label>\r\n            <input type=\"checkbox\" id=\"is_doctor\" class=\"checkbox my-1\" (click)=\"checkDoctor()\"\r\n                   [checked]=\"is_doctor_checker\" formControlName=\"is_doctor\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n      </div>\r\n    </form>\r\n    <div class=\"warning\" *ngIf=\"this.errMsg\">\r\n      {{this.errMsg}}\r\n    </div>\r\n  </div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IUserModelInfo} from \"../../../../models/IUser\";\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.sass'],\r\n  host:{\r\n    class:'disp_contents'\r\n  }\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  @Input()\r\n  user?: IUserModelInfo;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col 1\"\r\n     style=\"\r\n     flex: 1 1 0;\r\n     max-width: 316px;\r\n\">\r\n  <div *ngIf=\"user\" class=\"card\" style=\"\">\r\n    <!--  <img src=\"...\" class=\"card-img-top\" alt=\"...\">-->\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">{{user.email}}</h5>\r\n      <p class=\"card-text\">\r\n      </p>\r\n      <ul class=\"list-group\">\r\n        <li class=\"list-group-item text-capitalize\">\r\n          <p class=\"d-flex justify-content-between\">First name: <span class=\"fw-bold\">{{user.profile.first_name}}</span>\r\n          </p>\r\n        </li>\r\n        <li class=\"list-group-item text-capitalize\">\r\n          <p class=\"d-flex justify-content-between\">Second name: <span\r\n            class=\"fw-bold\">{{user.profile.second_name}}</span>\r\n          </p>\r\n        </li>\r\n        <li class=\"list-group-item text-capitalize\">\r\n          <p class=\"d-flex justify-content-between\">Last name: <span class=\"fw-bold\">{{user.profile.last_name}}</span>\r\n          </p>\r\n        </li>\r\n        <li class=\"list-group-item \">\r\n          <p class=\"d-flex justify-content-between\">Age: <span class=\"fw-bold\">{{user.profile.age}}</span></p>\r\n        </li>\r\n      </ul>\r\n      <div>\r\n        <a [routerLink]=\"'#'\" class=\"btn btn-primary mt-2\">USER PROFILE</a>\r\n      </div>\r\n      <div>\r\n        <a [routerLink]=\"'#'\" class=\"btn btn-primary mt-2\">PATIENTS PROFILE</a>\r\n      </div>\r\n      <div *ngIf=\"user.user_role\">\r\n        <a [routerLink]=\"'#'\" class=\"btn btn-primary mt-2\">DOCTORS` PROFILE</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\nimport {UserService} from \"../../../services/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.sass']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  formatted_list_of_users: Array<IUserModelInfo[]>;\r\n  info_chunk_size$: number = 4;\r\n  $error: string;\r\n\r\n  constructor(\r\n    private UserService:UserService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.UserService.getUsers().subscribe({\r\n      next: (data) => {\r\n        this.formatted_list_of_users = []\r\n        for (let i = 0; i < data.results.length; i += this.info_chunk_size$) {\r\n          const chunk = data.results.slice(i, i + this.info_chunk_size$)\r\n          this.formatted_list_of_users.push(chunk)\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.$error = JSON.parse(err.error.message)\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!formatted_list_of_users else users_screen\">\r\n  <ng-container *ngTemplateOutlet=\"user_error\"></ng-container>\r\n</div>\r\n\r\n<ng-template #user_error>\r\n  Users not found!\r\n</ng-template>\r\n\r\n<ng-template #users_screen>\r\n  <div>\r\n    <p>List of users</p>\r\n  </div>\r\n  <div style=\"margin-top: 120px\">\r\n    <div class=\"row d-flex justify-content-start gap-2 mb-2\" *ngFor=\"let chunk of formatted_list_of_users\">\r\n      <app-user *ngFor=\"let user of chunk\" [user]=\"user\"></app-user>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","export const regExList = {\r\n  ukrainian_phone_num: new RegExp(\"(\\\\+380\\\\s?d{2}\\\\s?d{3}\\\\s?d{4}$)\"),\r\n}\r\n","import {environment} from \"../environments/environment\"\r\n\r\nconst {URL} = environment;\r\n\r\nexport const user_urls = {\r\n  register: `${URL}/users/sign_up`,\r\n  login: `${URL}/auth/token`,\r\n  refresh: `${URL}/auth/token/refresh`\r\n}\r\n\r\nexport const boards_url = {\r\n  me: `${URL}/users/me`,\r\n  profile: `${URL}/users/profile`,\r\n  all_users: `${URL}/users/all`,\r\n  all_doctors: `${URL}/doctors`,\r\n  all_patients: `${URL}/patients`,\r\n}\r\n\r\nexport const doctors_urls = {\r\n  doctor_patients: 'staff/doctor'\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  URL:'/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {BehaviorSubject, catchError, Observable, tap} from \"rxjs\";\r\nimport {user_urls} from '../constants/url.constants'\r\nimport {IProfile, IUserModelInfo, IUserModelSignUp} from \"../models/IUser\";\r\nimport {ITokenPair} from \"../models/ITokenPair\";\r\nimport {TokenStorageService} from \"./token-storage.service\";\r\n\r\n\r\nconst TOKEN_KEY = 'auth_token'\r\nconst REFRESH_KEY = 'refresh_token'\r\nconst USER_KEY = 'auth_user'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n  public UserIsLogged: BehaviorSubject<boolean> = new BehaviorSubject(false)\r\n  public UserInfo: BehaviorSubject<IUserModelInfo | {}> = new BehaviorSubject({})\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  login(email: string, password: string): Observable<ITokenPair> {\r\n    return this.http.post<ITokenPair>(`${user_urls.login}`, {email: email, password: password})\r\n  }\r\n\r\n  register(user: IUserModelSignUp): Observable<IUserModelInfo> {\r\n    return this.http.post<IUserModelInfo>(`${user_urls.register}`, {...user})\r\n  }\r\n\r\n  refreshToken(token: string): Observable<ITokenPair> {\r\n\r\n    return this.http.post<ITokenPair>(`${user_urls.refresh}`, {\"refresh\": token}).pipe(\r\n      tap({\r\n        next: (token) => {\r\n          this.SaveTokens(token)\r\n        },\r\n        error: (err) => {\r\n          catchError(err)\r\n        }\r\n      }),\r\n    )\r\n  }\r\n\r\n  signOut() {\r\n    this.UserIsLogged.next(false)\r\n    this.UserInfo.next({})\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public SaveTokens(tokens: { access: string, refresh: string }) {\r\n    window.sessionStorage.setItem(TOKEN_KEY, tokens.access)\r\n    window.sessionStorage.setItem(REFRESH_KEY, tokens.refresh)\r\n  }\r\n\r\n  public getAccessToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY)\r\n  }\r\n\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESH_KEY)\r\n  }\r\n\r\n  public saveUser(user: IUserModelInfo): void {\r\n    this.UserInfo.next(user)\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user))\r\n  }\r\n\r\n  public updateUser(profile: IProfile): void {\r\n    const user = this.getUser()\r\n    if (user) {\r\n      user.profile = profile\r\n      this.saveUser(user)\r\n    }\r\n  }\r\n\r\n  public getUser(): IUserModelInfo | void {\r\n    const user = window.sessionStorage.getItem(USER_KEY)\r\n    if (user) {\r\n      return JSON.parse(user)\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HTTP_INTERCEPTORS, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport {BehaviorSubject, catchError, filter, Observable, switchMap, take, throwError} from 'rxjs';\r\nimport {TokenStorageService} from \"../token-storage.service\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {ITokenPair} from \"../../models/ITokenPair\";\r\nimport {logMessages} from \"@angular-devkit/build-angular/src/builders/browser-esbuild/esbuild\";\r\nimport {Router} from \"@angular/router\";\r\n\r\nconst TOKEN_HEADER_TYPE = 'Authorization'\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  isRefreshing = false\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router:Router\r\n  ) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let authReq = request\r\n    const token = this.authService.getAccessToken();\r\n    if (token != null) {\r\n      authReq = this.AddTokenHeader(request, token)\r\n    }\r\n    return next.handle(authReq).pipe(catchError(error => {\r\n        if (error instanceof HttpErrorResponse && !authReq.url.includes('register') && error.status === 401) {\r\n          return this.handle401error(authReq, next)\r\n        }\r\n        // this.router.navigate(['login']).then()\r\n        // this.authService.signOut()\r\n        // return throwError(() => new Error('Tokes is expired'))\r\n      })\r\n    ) as any\r\n  }\r\n\r\n  private AddTokenHeader(request: HttpRequest<unknown>, token: string) {\r\n    return request.clone({headers: request.headers.set(TOKEN_HEADER_TYPE, 'Bearer ' + token)})\r\n  }\r\n\r\n  handle401error(request: HttpRequest<any>, next: HttpHandler):any {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true\r\n      const refresh = this.authService.getRefreshToken()\r\n      if (refresh) {\r\n        return this.authService.refreshToken(refresh).pipe(\r\n          switchMap((tokens) => {\r\n            return next.handle(this.AddTokenHeader(request, tokens.access))\r\n          }),\r\n          catchError(() => {\r\n            this.isRefreshing = false\r\n            this.authService.signOut()\r\n            this.router.navigate(['login']).then()\r\n            return throwError(()=>new Error('Token is invalid or expired'))\r\n          })\r\n        )\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const AuthServiceProvider = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  }\r\n]\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IProfile, IUserModelInfo} from \"../models/IUser\";\r\nimport {boards_url} from \"../constants/url.constants\";\r\nimport {IResponse} from \"../models/IResponse\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private http:HttpClient\r\n  ) { }\r\n\r\n  getUsers():Observable<IResponse<IUserModelInfo>>{\r\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.all_users}`,)\r\n  }\r\n  getMeUser():Observable<IResponse<IUserModelInfo>>{\r\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.me}`,)\r\n  }\r\n\r\n  getUserById(id:string):Observable<IResponse<IUserModelInfo>>{\r\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.all_users}/id`,)\r\n  }\r\n\r\n  updateUserProfileByID(profileInfo:Partial<IProfile>):Observable<IProfile>{\r\n    return this.http.patch<IProfile>(`${boards_url.profile}`, {...profileInfo}, {})\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}