{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/board-admin/board-admin.component.ts","./src/app/components/board-admin/board-admin.component.html","./src/app/components/board-moderator/board-moderator.component.ts","./src/app/components/board-moderator/board-moderator.component.html","./src/app/components/board-user/board-user.component.ts","./src/app/components/cabinet/cabinet.component.ts","./src/app/components/cabinet/cabinet.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/users/user/user.component.ts","./src/app/components/users/user/user.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/constants/url.constants.ts","./src/environments/environment.ts","./src/main.ts","./src/services/auth.service.ts","./src/services/guards/user.guard.ts","./src/services/interceptors/auth.interceptor.ts","./src/services/token-storage.service.ts","./src/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {RegisterComponent} from \"./components/register/register.component\";\nimport {BoardUserComponent} from \"./components/board-user/board-user.component\";\nimport {UserGuard} from \"../services/guards/user.guard\";\nimport {CabinetComponent} from \"./components/cabinet/cabinet.component\";\nimport {ProfileComponent} from \"./components/profile/profile.component\";\n\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'login',component:LoginComponent,canActivate:[UserGuard]},\n  {path:'my_cabinet',component:CabinetComponent,canActivate:[UserGuard]},\n  {path:'profile',component:ProfileComponent,canActivate:[UserGuard]},\n  {path:'register',component:RegisterComponent,canActivate:[UserGuard]},\n  {path:'user',component:BoardUserComponent},\n  {path:'patient',component:HomeComponent},\n  {path:'admin',component:HomeComponent},\n  {path:'**',redirectTo:'home',pathMatch:'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from \"../services/token-storage.service\";\nimport {IUserModelInfo} from \"../models/IUser\";\nimport {AuthService} from \"../services/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n  host:{}\n})\nexport class AppComponent implements OnInit {\n  title = 'health_care_frontend';\n\n  private roles: string[] = [];\n  isLoggedIn: boolean = false;\n  showDoctorsCabinet: boolean = false;\n  username?: string;\n\n\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private authService: AuthService,\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.tokenStorageService.getAccessToken()) {\n      this.roles = []\n      this.authService.UserIsLogged.next(true)\n      this.showDoctorsCabinet = this.roles.includes('doctor')\n    } else {\n      this.authService.UserIsLogged.next(false)\n    }\n    this.authService.UserIsLogged.subscribe({\n      next: (value) => {\n        this.isLoggedIn = value\n        if (value) {\n          let user: IUserModelInfo | void = this.tokenStorageService.getUser();\n          if (user) {\n            for (let obj of user.user_role) {\n              this.roles.unshift(obj.role)\n            }\n            this.showDoctorsCabinet = this.roles.includes('doctor')\n            if (\"profile\" in user) {\n              this.username = user.profile.first_name\n            }\n          }\n        }\n      }\n    })\n  }\n\n  logOut() {\n    this.authService.UserIsLogged.next(false)\n    this.isLoggedIn = false\n    this.tokenStorageService.signOut()\n    window.location.reload()\n  }\n\n}\n","<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <h3 class=\"navbar-brand noselect\">DocHealth</h3>\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showDoctorsCabinet && isLoggedIn\">\n        <a class=\"nav-link\" [routerLink]=\"['my_cabinet']\">Cabinet</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">My profile</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logOut()\">Log out</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {BoardAdminComponent} from './components/board-admin/board-admin.component';\nimport {BoardUserComponent} from './components/board-user/board-user.component';\nimport {BoardModeratorComponent} from './components/board-moderator/board-moderator.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AuthServiceProvider} from \"../services/interceptors/auth.interceptor\";\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {UsersComponent} from './components/users/users.component';\nimport {UserComponent} from './components/users/user/user.component';\nimport {CabinetComponent} from './components/cabinet/cabinet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    HomeComponent,\n    BoardAdminComponent,\n    BoardUserComponent,\n    BoardModeratorComponent,\n    UsersComponent,\n    UserComponent,\n    CabinetComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n  ],\n  providers: AuthServiceProvider,\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport {UserService} from \"../../../services/user.service\";\n\n@Component({\n  selector: 'app-board-admin',\n  templateUrl: './board-admin.component.html',\n  styleUrls: ['./board-admin.component.sass']\n})\nexport class BoardAdminComponent implements OnInit {\n\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n  </header>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board-moderator',\n  templateUrl: './board-moderator.component.html',\n  styleUrls: ['./board-moderator.component.sass']\n})\nexport class BoardModeratorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>board-moderator works!</p>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UserService} from \"../../../services/user.service\";\nimport {IUserModelInfo} from \"../../../models/IUser\";\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.sass'],\n  host:{\n    class:'disp_contents'\n  }\n})\nexport class BoardUserComponent implements OnInit {\n\n  // content?:any[];\n\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cabinet',\n  templateUrl: './cabinet.component.html',\n  styleUrls: ['./cabinet.component.sass']\n})\nexport class CabinetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Cabinet works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../services/user.service\";\nimport {IUserModelInfo} from \"../../../models/IUser\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n\n\n  constructor(\n    private UserService: UserService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"container\">\n  <div *ngIf=\"1 else welcome_screen\">\n  </div>\n</div>\n\n<ng-template #welcome_screen>\n  <div>\n    <p>Hello</p>\n  </div>\n</ng-template>\n\n<app-users></app-users>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {UserService} from \"../../../services/user.service\";\nimport {IUserModelInfo} from \"../../../models/IUser\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n\n  formLogin: FormGroup = new FormGroup({\n    email: new FormControl('101@gmail.com'),\n    password: new FormControl('1111')\n  })\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errMsg = ''\n  user: IUserModelInfo;\n  roles: string[] = [];\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private tokenStorage: TokenStorageService,\n    private router:Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.authService.UserIsLogged.subscribe({next: value => this.isLoggedIn = value})\n    if (this.tokenStorage.getAccessToken()) {\n      const user = this.tokenStorage.getUser()\n      if (user) {\n        this.user = user\n      }\n      this.authService.UserIsLogged.next(true)\n    }\n  }\n\n  onSubmit(): void {\n    const {email, password} = this.formLogin.getRawValue()\n    this.authService.login(email, password).subscribe(\n      {\n        next: (value) => {\n          this.tokenStorage.SaveTokens(value)\n          this.isLoginFailed = false\n          this.isLoggedIn = true\n\n          this.userService.getMeUser().subscribe({\n            next: (value) => {\n              let user = value.results[0]\n              this.tokenStorage.saveUser(user)\n              this.user = user\n              this.authService.UserIsLogged.next(true)\n              this.router.navigate(['/home'])\n            },\n            error: (err) => {\n              this.authService.UserIsLogged.next(false)\n              this.errMsg = err.error.message;\n              this.isLoginFailed = true\n\n            }\n          })\n        },\n        error: (err) => {\n          this.errMsg = err.error.message;\n          this.isLoginFailed = true\n        },\n      }\n    )\n\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <form\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"formLogin.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n        [formGroup]=\"formLogin\"\n    >\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          formControlName=\"email\"\n          required\n        />\n<!--        <div-->\n<!--          class=\"alert alert-danger\"-->\n<!--          role=\"alert\"-->\n<!--          *ngIf=\"username.errors && f.submitted\"-->\n<!--        >-->\n<!--          Username is required!-->\n<!--        </div>-->\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          formControlName=\"password\"\n          required\n          minlength=\"4\"\n        />\n<!--        <div-->\n<!--          class=\"alert alert-danger\"-->\n<!--          role=\"alert\"-->\n<!--          *ngIf=\"password.errors && f.submitted\"-->\n<!--        >-->\n<!--          <div *ngIf=\"password.errors.required\">Password is required</div>-->\n<!--          <div *ngIf=\"password.errors.minlength\">-->\n<!--            Password must be at least 6 characters-->\n<!--          </div>-->\n<!--        </div>-->\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n<!--      <div class=\"form-group\">-->\n<!--        <div-->\n<!--          class=\"alert alert-danger\"-->\n<!--          role=\"alert\"-->\n<!--          *ngIf=\"f.submitted && isLoginFailed\"-->\n<!--        >-->\n<!--          Login failed: {{ errMsg }}-->\n<!--        </div>-->\n<!--      </div>-->\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn && user\">\n      <p >Logged in as {{user.profile.first_name}} {{user.profile.last_name}}</p>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../services/user.service\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {IUserModelInfo} from \"../../../models/IUser\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.sass']\n})\nexport class ProfileComponent implements OnInit {\n\n  currentUser: IUserModelInfo;\n\n  constructor(\n    private userService: UserService,\n    private tokenStorageService: TokenStorageService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getMeUser().subscribe({\n      next:(value)=>{\n        const user:IUserModelInfo = value.results[0]\n        this.tokenStorageService.saveUser(user)\n      },\n      error:(value)=>{}\n    })\n  }\n\n}\n","Profile works!\n\n\n<!--<div class=\"container\" *ngIf=\"currentUser;else loggedOut\">-->\n<!--  <header class=\"jumbotron\">-->\n<!--    <h3>-->\n<!--      <strong>{{currentUser.profile.first_name}} {{currentUser.profile.last_name}}</strong> Profile-->\n<!--    </h3>-->\n<!--  </header>-->\n<!--  <p>-->\n<!--    <strong>Email:</strong>-->\n<!--    {{currentUser.email}}-->\n<!--  </p>-->\n<!--</div>-->\n<!--<ng-template #loggedOut>-->\n<!--  <div>-->\n<!--    <p>-->\n<!--      Please login.-->\n<!--    </p>-->\n<!--  </div>-->\n<!--</ng-template>-->\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../../services/auth.service\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport { IUserModelSignUp} from \"../../../models/IUser\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.sass']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup = new FormGroup(\n    {\n      email: new FormControl('118@gmail.com'),\n      password: new FormControl('111111'),\n      first_name: new FormControl('serhiy'),\n      second_name: new FormControl('terlotskiy'),\n      last_name: new FormControl('andriy'),\n      age: new FormControl('18'),\n\n    }\n  );\n  isSuccessful: boolean = true\n  isSignUpFailed: boolean = false\n  errMsg: string = '';\n\n  constructor(private authService: AuthService) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    let user = this.registerForm.getRawValue()\n    let user_formatted: IUserModelSignUp = {\n      email: user.email,\n      password: user.password,\n      profile: {\n        first_name: user.first_name,\n        second_name: user.second_name,\n        last_name: user.last_name,\n        age: user.age,\n      }\n    }\n    console.log(user_formatted)\n    this.authService.register(user_formatted).subscribe({\n      next:(value) => {\n        console.log(user_formatted)\n        console.log(value)\n        this.isSuccessful = true\n        this.isSignUpFailed = false\n      },\n      error:(err)=>{\n        console.log(err)\n        this.errMsg = err.error.message\n        this.isSignUpFailed = true\n      }\n      }\n    )\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card\">\n    <form [formGroup]=\"registerForm\" *ngIf=\"isSuccessful\" (ngSubmit)=\"onSubmit()\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" id=\"email\" class=\"form-control\" required email formControlName=\"email\">\n        <label for=\"password\">Password</label>\n        <input type=\"text\" id=\"password\" class=\"form-control\" required formControlName=\"password\">\n        <label for=\"age\">Age</label>\n        <input type=\"text\" id=\"age\" class=\"form-control\" required formControlName=\"age\">\n        <label for=\"first_name\">First name</label>\n        <input type=\"text\" id=\"first_name\" class=\"form-control\" required formControlName=\"first_name\">\n        <label for=\"second_name\">Second name</label>\n        <input type=\"text\" id=\"second_name\" class=\"form-control\" required formControlName=\"second_name\">\n        <label for=\"last_name\">Last name</label>\n        <input type=\"text\" id=\"last_name\" class=\"form-control\" required formControlName=\"last_name\">\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IUserModelInfo} from \"../../../../models/IUser\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.sass'],\n  host:{\n    class:'disp_contents'\n  }\n})\nexport class UserComponent implements OnInit {\n\n  @Input()\n  user?: IUserModelInfo;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col 1\"\n     style=\"\n     flex: 1 1 0;\n     max-width: 316px;\n\">\n  <div *ngIf=\"user\" class=\"card\" style=\"\">\n    <!--  <img src=\"...\" class=\"card-img-top\" alt=\"...\">-->\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{user.email}}</h5>\n      <p class=\"card-text\">\n      </p>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item text-capitalize\">\n          <p class=\"d-flex justify-content-between\">First name: <span class=\"fw-bold\">{{user.profile.first_name}}</span>\n          </p>\n        </li>\n        <li class=\"list-group-item text-capitalize\">\n          <p class=\"d-flex justify-content-between\">Second name: <span\n            class=\"fw-bold\">{{user.profile.second_name}}</span>\n          </p>\n        </li>\n        <li class=\"list-group-item text-capitalize\">\n          <p class=\"d-flex justify-content-between\">Last name: <span class=\"fw-bold\">{{user.profile.last_name}}</span>\n          </p>\n        </li>\n        <li class=\"list-group-item \">\n          <p class=\"d-flex justify-content-between\">Age: <span class=\"fw-bold\">{{user.profile.age}}</span></p>\n        </li>\n      </ul>\n      <div>\n        <a [routerLink]=\"'#'\" class=\"btn btn-primary mt-2\">USER PROFILE</a>\n      </div>\n      <div>\n        <a [routerLink]=\"'#'\" class=\"btn btn-primary mt-2\">PATIENTS PROFILE</a>\n      </div>\n      <div *ngIf=\"user.user_role\">\n        <a [routerLink]=\"'#'\" class=\"btn btn-primary mt-2\">DOCTORS` PROFILE</a>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {IUserModelInfo} from \"../../../models/IUser\";\nimport {UserService} from \"../../../services/user.service\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.sass']\n})\nexport class UsersComponent implements OnInit {\n\n  formatted_list_of_users: Array<IUserModelInfo[]>;\n  info_chunk_size$: number = 4;\n  $error: string;\n\n  constructor(\n    private UserService:UserService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.UserService.getUsers().subscribe({\n      next: (data) => {\n        this.formatted_list_of_users = []\n        for (let i = 0; i < data.results.length; i += this.info_chunk_size$) {\n          const chunk = data.results.slice(i, i + this.info_chunk_size$)\n          this.formatted_list_of_users.push(chunk)\n        }\n      },\n      error: (err) => {\n        this.$error = JSON.parse(err.error.message)\n      }\n    })\n  }\n\n}\n","<div *ngIf=\"!formatted_list_of_users else users_screen\">\n  <ng-container *ngTemplateOutlet=\"user_error\"></ng-container>\n</div>\n\n<ng-template #user_error>\n  Users not found!\n</ng-template>\n\n<ng-template #users_screen>\n  <div>\n    <p>List of users</p>\n  </div>\n  <div style=\"margin-top: 120px\">\n    <div class=\"row d-flex justify-content-start gap-2 mb-2\" *ngFor=\"let chunk of formatted_list_of_users\">\n      <app-user *ngFor=\"let user of chunk\" [user]=\"user\"></app-user>\n    </div>\n  </div>\n</ng-template>\n","import {environment} from \"../environments/environment\"\r\n\r\nconst {URL} = environment;\r\n\r\nexport const user_urls = {\r\n  register: `${URL}/users`,\r\n  login: `${URL}/auth/token`,\r\n  refresh: `${URL}/auth/token/refresh`\r\n}\r\n\r\nexport const boards_url = {\r\n  me: `${URL}/users/me`,\r\n  all_users: `${URL}/users/all`,\r\n  all_doctors: `${URL}/doctors`,\r\n  all_patients: `${URL}/patient`,\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  URL:'/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {user_urls} from '../constants/url.constants'\nimport {IUserModelInfo, IUserModelSignUp} from \"../models/IUser\";\nimport {ITokenPair} from \"../models/ITokenPair\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  public UserIsLogged: BehaviorSubject<boolean> = new BehaviorSubject(false)\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  login(email: string, password: string): Observable<ITokenPair> {\n    return this.http.post<ITokenPair>(`${user_urls.login}`, {email:email, password:password})\n  }\n\n  register(user:IUserModelSignUp):Observable<IUserModelInfo>{\n    return this.http.post<IUserModelInfo>(`${user_urls.register}`, {...user})\n  }\n\n  refreshToken(token:string):Observable<ITokenPair>{\n    return this.http.post<ITokenPair>(`${user_urls.refresh}`, token)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HTTP_INTERCEPTORS, HttpErrorResponse\n} from '@angular/common/http';\nimport {BehaviorSubject, catchError, filter, Observable, switchMap, take, throwError} from 'rxjs';\nimport {TokenStorageService} from \"../token-storage.service\";\nimport {AuthService} from \"../auth.service\";\nimport {ITokenPair} from \"../../models/ITokenPair\";\n\nconst TOKEN_HEADER_TYPE = 'Authorization'\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  isRefreshing = false\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private tokenStorage: TokenStorageService,\n    private authService: AuthService\n  ) {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let authReq = request\n    const token = this.tokenStorage.getAccessToken();\n    if (token != null) {\n      authReq = this.AddTokenHeader(request, token)\n    }\n    return next.handle(authReq).pipe(catchError(error => {\n\n        if (error instanceof HttpErrorResponse && !authReq.url.includes('register') && error.status === 401) {\n          return this.handle401error(authReq, next)\n        }\n\n        return throwError(error)\n      })\n    )\n  }\n\n  private AddTokenHeader(request: HttpRequest<unknown>, token: string) {\n    return request.clone({headers: request.headers.set(TOKEN_HEADER_TYPE, 'Bearer ' + token)})\n  }\n\n  handle401error(request: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true\n      this.refreshTokenSubject.next(null)\n      const refresh_token = this.tokenStorage.getRefreshToken()\n\n      if (refresh_token) {\n        return this.authService.refreshToken(refresh_token).pipe(\n          switchMap((tokens: ITokenPair) => {\n            this.isRefreshing = false\n\n            this.tokenStorage.SaveTokens(tokens)\n            this.refreshTokenSubject.next(tokens.refresh)\n\n            return next.handle(this.AddTokenHeader(request, tokens.access))\n          }),\n        )\n      } else {\n        catchError((err) => {\n          this.isRefreshing = false\n          this.tokenStorage.signOut()\n          return throwError(err)\n        })\n      }\n\n    }\n    return this.refreshTokenSubject.pipe(\n      filter(token => token !== null),\n      take(1),\n      switchMap((token) => next.handle(this.AddTokenHeader(request, token)))\n    )\n\n  }\n}\n\nexport const AuthServiceProvider = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true,\n  }\n]\n","import {Injectable} from '@angular/core';\nimport {IUserModelInfo} from \"../models/IUser\";\nimport {AuthService} from \"./auth.service\";\n\nconst TOKEN_KEY = 'auth_token'\nconst REFRESH_KEY = 'refresh_token'\nconst USER_KEY = 'auth_user'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TokenStorageService {\n\n  constructor(\n    private authService:AuthService\n  ) {\n  }\n\n  signOut() {\n    this.authService.UserIsLogged.next(false)\n    window.sessionStorage.clear();\n  }\n\n  public SaveTokens(tokens: { access: string, refresh: string }) {\n    window.sessionStorage.setItem(TOKEN_KEY, tokens.access)\n    window.sessionStorage.setItem(REFRESH_KEY, tokens.refresh)\n  }\n\n  public getAccessToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY)\n  }\n\n  public getRefreshToken(): string | null {\n    return window.sessionStorage.getItem(REFRESH_KEY)\n  }\n\n  public saveUser(user: IUserModelInfo): void {\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user))\n  }\n\n  public getUser(): IUserModelInfo | void {\n    const user = window.sessionStorage.getItem(USER_KEY)\n    if (user) {\n      return JSON.parse(user)\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {IUserModelInfo} from \"../models/IUser\";\nimport {boards_url} from \"../constants/url.constants\";\nimport {IResponse} from \"../models/IResponse\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  getUsers():Observable<IResponse<IUserModelInfo>>{\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.all_users}`,)\n  }\n  getMeUser():Observable<IResponse<IUserModelInfo>>{\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.me}`,)\n  }\n\n  getUserById(id:string):Observable<IResponse<IUserModelInfo>>{\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.all_users}/id`,)\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}